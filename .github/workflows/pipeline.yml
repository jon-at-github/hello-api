name: CI Checks

on:
  pull_request:
    branches:
      - master
    paths:
      - "**"
  push:
    branches:
      - master
    paths:
      - "**"
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  test:
    needs:
      - format-check
      - lint
    name: Test Application
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.20
      - name: Check out code into Go module directory
        uses: actions/checkout@v2
      - name: Run test
        run: make test
      - name: Coverage Check
        run: make coverage
      - name: Generate Report
        run: make report
      - name: Copy Files
        run: |
          mkdir reports
          cp cover.html reports/.

      - name: Archive
        uses: actions/upload-artifact@v2
        with:
          name: reports
          path: reports
  build:
    name: Build App
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.20

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Build
        run: make build

      - name: Copy files
        run: |
          mkdir artifacts
          cp api artifacts/.

      - name: Archive
        uses: actions/upload-artifact@v2
        with:
          name: api
          path: artifacts
  deliver:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download binary
        uses: actions/download-artifact@v2
        with:
          name: api
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Still in experimentation phase
          draft: true
          prerelease: true
      - name: Upload Release Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: api
          asset_name: api
          asset_content_type: application/octet-stream
  deploy-function:
    name: Deploy FaaS
    runs-on: ubuntu-latest
    needs: test
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Auth validations
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
      - name: Deploy function
        id: deploy
        uses: google-github-actions/deploy-cloud-functions@main
        with:
          name: translate
          entry_point: Translate
          runtime: go120
      - id: test
        run: curl "${{ steps.deploy.outputs.url }}/hello"
  deploy-paas:
    name: Deploy PaaS
    runs-on: ubuntu-latest
    needs: test
    if: ${{github.event_name=='push' && github.ref == 'refs/heads/master'}}
    steps:
      - name: Checkout code into the go module directory
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Auth validations
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
      - name: Deploy App
        id: deploy
        uses: google-github-actions/deploy-appengine@v1
      - id: test
        run: curl "${{ steps.deploy.outputs.url }}/translate/hello"
  format-check:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.20
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Run Format Check
        run: make check-format
      - name: Vet
        run: go vet ./...
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: lint
        uses: golangci/golangci-lint-action@v2
  containerize-buildpack:
    name: Build Container buildpack
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Install Pack
        run: (curl -sSL "http://github.com/buildpacks/pack/releases/download/v0.21.1/pack-v0.21.1-linux.tgz" | sudo tar -C  /usr/local/bin/ --no-same-owner -xzv pack)
      - name: Build
        run: pack build gcr.io/${{ secrets.GCP_PROJECT_ID }}/hello-api:latest --builder gcr.io/buildpacks/builder:v1
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}
          export_default_credentials: true
      - name: Configure Docker
        run: gcloud auth configure-docker --quiet
      - name: Push Docker image to GCP
        run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/hello-api:latest
      - name: Log in to the GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Tag for Github
        run: docker image tag gcr.io/${{ secrets.GCP_PROJECT_ID }}/hello-api:latest ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
      - name: Push Docker image to GHCR
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
  deploy-container:
    name: Deploy Container buildpack
    runs-on: ubuntu-latest
    needs: containerize-buildpack
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    steps:
      - name: Auth validations
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
      - name: Deploy to CaaS
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: translate
          image: gcr.io/${{ secrets.GCP_PROJECT_ID }}/hello-api:latest
      - id: test
        run: curl "${{ steps.deploy.outputs.url }}/hello"
  containerize:
    name: Build Containers
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: Build Min
        run: docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:min .
      - name: Build Dev
        run: docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}:dev --target=dev .
      - name: Log in to the GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push Docker min image to GHCR
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:min
      - name: Push Docker dev image to GHCR
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}:dev
